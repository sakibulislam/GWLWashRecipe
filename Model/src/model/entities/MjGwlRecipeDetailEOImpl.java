package model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 27 00:26:53 BDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MjGwlRecipeDetailEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        RecipeId {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getRecipeId();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setRecipeId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getLineId();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        WashTypeId {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getWashTypeId();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setWashTypeId((Number)value);
            }
        }
        ,
        ChemicalId {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getChemicalId();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setChemicalId((Number)value);
            }
        }
        ,
        ChemicalQty {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getChemicalQty();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setChemicalQty((Number)value);
            }
        }
        ,
        Temperature {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getTemperature();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setTemperature((Number)value);
            }
        }
        ,
        MachineRpm {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getMachineRpm();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setMachineRpm((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        Status {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getStatus();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setStatus((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        WashType {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getWashType();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setWashType((String)value);
            }
        }
        ,
        WaterAmount {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getWaterAmount();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setWaterAmount((Number)value);
            }
        }
        ,
        ChemicalDesc {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getChemicalDesc();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setChemicalDesc((String)value);
            }
        }
        ,
        ChemicalRatio {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getChemicalRatio();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setChemicalRatio((Number)value);
            }
        }
        ,
        MjGwlRecipeMasterEO {
            public Object get(MjGwlRecipeDetailEOImpl obj) {
                return obj.getMjGwlRecipeMasterEO();
            }

            public void put(MjGwlRecipeDetailEOImpl obj, Object value) {
                obj.setMjGwlRecipeMasterEO((MjGwlRecipeMasterEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MjGwlRecipeDetailEOImpl object);

        public abstract void put(MjGwlRecipeDetailEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RECIPEID = AttributesEnum.RecipeId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int WASHTYPEID = AttributesEnum.WashTypeId.index();
    public static final int CHEMICALID = AttributesEnum.ChemicalId.index();
    public static final int CHEMICALQTY = AttributesEnum.ChemicalQty.index();
    public static final int TEMPERATURE = AttributesEnum.Temperature.index();
    public static final int MACHINERPM = AttributesEnum.MachineRpm.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int WASHTYPE = AttributesEnum.WashType.index();
    public static final int WATERAMOUNT = AttributesEnum.WaterAmount.index();
    public static final int CHEMICALDESC = AttributesEnum.ChemicalDesc.index();
    public static final int CHEMICALRATIO = AttributesEnum.ChemicalRatio.index();
    public static final int MJGWLRECIPEMASTEREO = AttributesEnum.MjGwlRecipeMasterEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MjGwlRecipeDetailEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entities.MjGwlRecipeDetailEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for RecipeId, using the alias name RecipeId.
     * @return the RecipeId
     */
    public Number getRecipeId() {
        return (Number)getAttributeInternal(RECIPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecipeId.
     * @param value value to set the RecipeId
     */
    public void setRecipeId(Number value) {
        setAttributeInternal(RECIPEID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for WashTypeId, using the alias name WashTypeId.
     * @return the WashTypeId
     */
    public Number getWashTypeId() {
        return (Number)getAttributeInternal(WASHTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WashTypeId.
     * @param value value to set the WashTypeId
     */
    public void setWashTypeId(Number value) {
        setAttributeInternal(WASHTYPEID, value);
    }

    /**
     * Gets the attribute value for ChemicalId, using the alias name ChemicalId.
     * @return the ChemicalId
     */
    public Number getChemicalId() {
        return (Number)getAttributeInternal(CHEMICALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChemicalId.
     * @param value value to set the ChemicalId
     */
    public void setChemicalId(Number value) {
        setAttributeInternal(CHEMICALID, value);
    }

    /**
     * Gets the attribute value for ChemicalQty, using the alias name ChemicalQty.
     * @return the ChemicalQty
     */
    public Number getChemicalQty() {
        return (Number)getAttributeInternal(CHEMICALQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChemicalQty.
     * @param value value to set the ChemicalQty
     */
    public void setChemicalQty(Number value) {
        setAttributeInternal(CHEMICALQTY, value);
    }

    /**
     * Gets the attribute value for Temperature, using the alias name Temperature.
     * @return the Temperature
     */
    public Number getTemperature() {
        return (Number)getAttributeInternal(TEMPERATURE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Temperature.
     * @param value value to set the Temperature
     */
    public void setTemperature(Number value) {
        setAttributeInternal(TEMPERATURE, value);
    }

    /**
     * Gets the attribute value for MachineRpm, using the alias name MachineRpm.
     * @return the MachineRpm
     */
    public Number getMachineRpm() {
        return (Number)getAttributeInternal(MACHINERPM);
    }

    /**
     * Sets <code>value</code> as the attribute value for MachineRpm.
     * @param value value to set the MachineRpm
     */
    public void setMachineRpm(Number value) {
        setAttributeInternal(MACHINERPM, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public Number getStatus() {
        return (Number)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(Number value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }


    /**
     * Gets the attribute value for WashType, using the alias name WashType.
     * @return the WashType
     */
    public String getWashType() {
        return (String)getAttributeInternal(WASHTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WashType.
     * @param value value to set the WashType
     */
    public void setWashType(String value) {
        setAttributeInternal(WASHTYPE, value);
    }

    /**
     * Gets the attribute value for WaterAmount, using the alias name WaterAmount.
     * @return the WaterAmount
     */
    public Number getWaterAmount() {
        return (Number)getAttributeInternal(WATERAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for WaterAmount.
     * @param value value to set the WaterAmount
     */
    public void setWaterAmount(Number value) {
        setAttributeInternal(WATERAMOUNT, value);
    }

    /**
     * Gets the attribute value for ChemicalDesc, using the alias name ChemicalDesc.
     * @return the ChemicalDesc
     */
    public String getChemicalDesc() {
        return (String)getAttributeInternal(CHEMICALDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChemicalDesc.
     * @param value value to set the ChemicalDesc
     */
    public void setChemicalDesc(String value) {
        setAttributeInternal(CHEMICALDESC, value);
    }

    /**
     * Gets the attribute value for ChemicalRatio, using the alias name ChemicalRatio.
     * @return the ChemicalRatio
     */
    public Number getChemicalRatio() {
        return (Number)getAttributeInternal(CHEMICALRATIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChemicalRatio.
     * @param value value to set the ChemicalRatio
     */
    public void setChemicalRatio(Number value) {
        setAttributeInternal(CHEMICALRATIO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MjGwlRecipeMasterEOImpl.
     */
    public MjGwlRecipeMasterEOImpl getMjGwlRecipeMasterEO() {
        return (MjGwlRecipeMasterEOImpl)getAttributeInternal(MJGWLRECIPEMASTEREO);
    }

    /**
     * Sets <code>value</code> as the associated entity MjGwlRecipeMasterEOImpl.
     */
    public void setMjGwlRecipeMasterEO(MjGwlRecipeMasterEOImpl value) {
        setAttributeInternal(MJGWLRECIPEMASTEREO, value);
    }


    /**
     * @param lineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineId) {
        return new Key(new Object[]{lineId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
        try {
            super.create(attributeList);
            oracle.jbo.server.SequenceImpl s =
                new oracle.jbo.server.SequenceImpl("MJ_GWL_RECIPE_DETAIL_S",
                                                   getDBTransaction());
            oracle.jbo.domain.Number sVal = s.getSequenceNumber();
            setLineId(sVal);
            System.out.println("Recently Created Line Id: " + sVal);
        } catch (Exception e) {
            e.printStackTrace();
        } 
     }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

     /**
      * Add locking logic here.
      */
     //    public void lock() {
     //        super.lock();
     //    }
     public void lock() {
         try {
             super.lock();
         } catch (oracle.jbo.RowInconsistentException e) {
             if (e.getErrorCode().equals("25014")) {
                 super.lock();
             } else
                 throw e;
         }
     }

     /**
      * Custom DML update/insert/delete logic here.
      * @param operation the operation type
      * @param e the transaction event
      */
     protected void doDML(int operation, TransactionEvent e){
         System.out.println("Enter in doDML....");
         Map sessionScope = ADFContext.getCurrent().getSessionScope();
         String user = (String)sessionScope.get("userId");

         if (operation == DML_INSERT) {
             try {
                 setCreationDate((Date)Date.getCurrentDate());
                 setCreatedBy(new oracle.jbo.domain.Number(user));
             } catch (SQLException f) {
                 System.out.println(f.getMessage());
             }
         } else if (DML_UPDATE == operation) {
             try {
                 setLastUpdateDate((Date)Date.getCurrentDate());
                 setLastUpdatedBy(new oracle.jbo.domain.Number(user));
             } catch (SQLException f) {
                 System.out.println(f.getMessage());
             }
         }
         super.doDML(operation, e);
     }
}
