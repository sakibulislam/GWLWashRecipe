package model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 27 00:22:29 BDT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MjGwlRecipeMasterEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        RecipeId {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getRecipeId();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setRecipeId((Number)value);
            }
        }
        ,
        StyleId {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getStyleId();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setStyleId((Number)value);
            }
        }
        ,
        Po {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getPo();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setPo((String)value);
            }
        }
        ,
        Country {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getCountry();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setCountry((String)value);
            }
        }
        ,
        Factory {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getFactory();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setFactory((String)value);
            }
        }
        ,
        MachineNo {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getMachineNo();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setMachineNo((String)value);
            }
        }
        ,
        OperatorId {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getOperatorId();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setOperatorId((Number)value);
            }
        }
        ,
        OperatorShift {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getOperatorShift();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setOperatorShift((String)value);
            }
        }
        ,
        GmtCategory {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getGmtCategory();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setGmtCategory((String)value);
            }
        }
        ,
        GmtType {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getGmtType();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setGmtType((String)value);
            }
        }
        ,
        AvgWeight {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getAvgWeight();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setAvgWeight((Number)value);
            }
        }
        ,
        TotalWeight {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getTotalWeight();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setTotalWeight((Number)value);
            }
        }
        ,
        LotQty {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getLotQty();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setLotQty((Number)value);
            }
        }
        ,
        Tdate {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getTdate();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setTdate((Date)value);
            }
        }
        ,
        Status {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getStatus();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setStatus((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        BuyerId {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getBuyerId();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        Color {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getColor();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        RecipeDocNo {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getRecipeDocNo();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setRecipeDocNo((String)value);
            }
        }
        ,
        Style {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getStyle();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setStyle((String)value);
            }
        }
        ,
        Wash {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getWash();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setWash((String)value);
            }
        }
        ,
        Buyer {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getBuyer();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setBuyer((String)value);
            }
        }
        ,
        Season {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getSeason();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        OrgId {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        OperatorName {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getOperatorName();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setOperatorName((String)value);
            }
        }
        ,
        MjGwlRecipeDetailEO {
            public Object get(MjGwlRecipeMasterEOImpl obj) {
                return obj.getMjGwlRecipeDetailEO();
            }

            public void put(MjGwlRecipeMasterEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MjGwlRecipeMasterEOImpl object);

        public abstract void put(MjGwlRecipeMasterEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RECIPEID = AttributesEnum.RecipeId.index();
    public static final int STYLEID = AttributesEnum.StyleId.index();
    public static final int PO = AttributesEnum.Po.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int FACTORY = AttributesEnum.Factory.index();
    public static final int MACHINENO = AttributesEnum.MachineNo.index();
    public static final int OPERATORID = AttributesEnum.OperatorId.index();
    public static final int OPERATORSHIFT = AttributesEnum.OperatorShift.index();
    public static final int GMTCATEGORY = AttributesEnum.GmtCategory.index();
    public static final int GMTTYPE = AttributesEnum.GmtType.index();
    public static final int AVGWEIGHT = AttributesEnum.AvgWeight.index();
    public static final int TOTALWEIGHT = AttributesEnum.TotalWeight.index();
    public static final int LOTQTY = AttributesEnum.LotQty.index();
    public static final int TDATE = AttributesEnum.Tdate.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int RECIPEDOCNO = AttributesEnum.RecipeDocNo.index();
    public static final int STYLE = AttributesEnum.Style.index();
    public static final int WASH = AttributesEnum.Wash.index();
    public static final int BUYER = AttributesEnum.Buyer.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int OPERATORNAME = AttributesEnum.OperatorName.index();
    public static final int MJGWLRECIPEDETAILEO = AttributesEnum.MjGwlRecipeDetailEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MjGwlRecipeMasterEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("model.entities.MjGwlRecipeMasterEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for RecipeId, using the alias name RecipeId.
     * @return the RecipeId
     */
    public Number getRecipeId() {
        return (Number)getAttributeInternal(RECIPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecipeId.
     * @param value value to set the RecipeId
     */
    public void setRecipeId(Number value) {
        setAttributeInternal(RECIPEID, value);
    }

    /**
     * Gets the attribute value for StyleId, using the alias name StyleId.
     * @return the StyleId
     */
    public Number getStyleId() {
        return (Number)getAttributeInternal(STYLEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleId.
     * @param value value to set the StyleId
     */
    public void setStyleId(Number value) {
        setAttributeInternal(STYLEID, value);
    }

    /**
     * Gets the attribute value for Po, using the alias name Po.
     * @return the Po
     */
    public String getPo() {
        return (String)getAttributeInternal(PO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Po.
     * @param value value to set the Po
     */
    public void setPo(String value) {
        setAttributeInternal(PO, value.trim());
    }

    /**
     * Gets the attribute value for Country, using the alias name Country.
     * @return the Country
     */
    public String getCountry() {
        return (String)getAttributeInternal(COUNTRY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Country.
     * @param value value to set the Country
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value.trim());
    }

    /**
     * Gets the attribute value for Factory, using the alias name Factory.
     * @return the Factory
     */
    public String getFactory() {
        return (String)getAttributeInternal(FACTORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Factory.
     * @param value value to set the Factory
     */
    public void setFactory(String value) {
        setAttributeInternal(FACTORY, value);
    }

    /**
     * Gets the attribute value for MachineNo, using the alias name MachineNo.
     * @return the MachineNo
     */
    public String getMachineNo() {
        return (String)getAttributeInternal(MACHINENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for MachineNo.
     * @param value value to set the MachineNo
     */
    public void setMachineNo(String value) {
        setAttributeInternal(MACHINENO, value);
    }

    /**
     * Gets the attribute value for OperatorId, using the alias name OperatorId.
     * @return the OperatorId
     */
    public Number getOperatorId() {
        return (Number)getAttributeInternal(OPERATORID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperatorId.
     * @param value value to set the OperatorId
     */
    public void setOperatorId(Number value) {
        setAttributeInternal(OPERATORID, value);
    }

    /**
     * Gets the attribute value for OperatorShift, using the alias name OperatorShift.
     * @return the OperatorShift
     */
    public String getOperatorShift() {
        return (String)getAttributeInternal(OPERATORSHIFT);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperatorShift.
     * @param value value to set the OperatorShift
     */
    public void setOperatorShift(String value) {
        setAttributeInternal(OPERATORSHIFT, value);
    }

    /**
     * Gets the attribute value for GmtCategory, using the alias name GmtCategory.
     * @return the GmtCategory
     */
    public String getGmtCategory() {
        return (String)getAttributeInternal(GMTCATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for GmtCategory.
     * @param value value to set the GmtCategory
     */
    public void setGmtCategory(String value) {
        setAttributeInternal(GMTCATEGORY, value);
    }

    /**
     * Gets the attribute value for GmtType, using the alias name GmtType.
     * @return the GmtType
     */
    public String getGmtType() {
        return (String)getAttributeInternal(GMTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GmtType.
     * @param value value to set the GmtType
     */
    public void setGmtType(String value) {
        setAttributeInternal(GMTTYPE, value);
    }

    /**
     * Gets the attribute value for AvgWeight, using the alias name AvgWeight.
     * @return the AvgWeight
     */
    public Number getAvgWeight() {
        return (Number)getAttributeInternal(AVGWEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AvgWeight.
     * @param value value to set the AvgWeight
     */
    public void setAvgWeight(Number value) {
        setAttributeInternal(AVGWEIGHT, value);
    }

    /**
     * Gets the attribute value for TotalWeight, using the alias name TotalWeight.
     * @return the TotalWeight
     */
    public Number getTotalWeight() {
        return (Number)getAttributeInternal(TOTALWEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalWeight.
     * @param value value to set the TotalWeight
     */
    public void setTotalWeight(Number value) {
        setAttributeInternal(TOTALWEIGHT, value);
    }

    /**
     * Gets the attribute value for LotQty, using the alias name LotQty.
     * @return the LotQty
     */
    public Number getLotQty() {
        return (Number)getAttributeInternal(LOTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LotQty.
     * @param value value to set the LotQty
     */
    public void setLotQty(Number value) {
        setAttributeInternal(LOTQTY, value);
    }

    /**
     * Gets the attribute value for Tdate, using the alias name Tdate.
     * @return the Tdate
     */
    public Date getTdate() {
        return (Date)getAttributeInternal(TDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Tdate.
     * @param value value to set the Tdate
     */
    public void setTdate(Date value) {
        setAttributeInternal(TDATE, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public Number getStatus() {
        return (Number)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(Number value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for BuyerId, using the alias name BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId.
     * @param value value to set the BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for Color, using the alias name Color.
     * @return the Color
     */
    public String getColor() {
        return (String)getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Color.
     * @param value value to set the Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for RecipeDocNo, using the alias name RecipeDocNo.
     * @return the RecipeDocNo
     */
    public String getRecipeDocNo() {
        return (String)getAttributeInternal(RECIPEDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecipeDocNo.
     * @param value value to set the RecipeDocNo
     */
    public void setRecipeDocNo(String value) {
        setAttributeInternal(RECIPEDOCNO, value);
    }

    /**
     * Gets the attribute value for Style, using the alias name Style.
     * @return the Style
     */
    public String getStyle() {
        return (String)getAttributeInternal(STYLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Style.
     * @param value value to set the Style
     */
    public void setStyle(String value) {
        setAttributeInternal(STYLE, value);
    }

    /**
     * Gets the attribute value for Wash, using the alias name Wash.
     * @return the Wash
     */
    public String getWash() {
        return (String)getAttributeInternal(WASH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Wash.
     * @param value value to set the Wash
     */
    public void setWash(String value) {
        setAttributeInternal(WASH, value);
    }

    /**
     * Gets the attribute value for Buyer, using the alias name Buyer.
     * @return the Buyer
     */
    public String getBuyer() {
        return (String)getAttributeInternal(BUYER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Buyer.
     * @param value value to set the Buyer
     */
    public void setBuyer(String value) {
        setAttributeInternal(BUYER, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for OperatorName, using the alias name OperatorName.
     * @return the OperatorName
     */
    public String getOperatorName() {
        return (String)getAttributeInternal(OPERATORNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for OperatorName.
     * @param value value to set the OperatorName
     */
    public void setOperatorName(String value) {
        setAttributeInternal(OPERATORNAME, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMjGwlRecipeDetailEO() {
        return (RowIterator)getAttributeInternal(MJGWLRECIPEDETAILEO);
    }


    /**
     * @param recipeId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number recipeId) {
        return new Key(new Object[]{recipeId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        try {
            super.create(attributeList);
            oracle.jbo.server.SequenceImpl s =
                new oracle.jbo.server.SequenceImpl("MJ_GWL_RECIPE_MASTER_S",
                                                   getDBTransaction());
            oracle.jbo.domain.Number sVal = s.getSequenceNumber();
            setRecipeId(sVal);
            System.out.println("Recently Created Recipe Id: " + sVal);
            setTdate((Date)Date.getCurrentDate());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
        

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    //    public void lock() {
    //        super.lock();
    //    }
    public void lock() {
        try {
            super.lock();
        } catch (oracle.jbo.RowInconsistentException e) {
            if (e.getErrorCode().equals("25014")) {
                super.lock();
            } else
                throw e;
        }
    }

     /**
      * Custom DML update/insert/delete logic here.
      * @param operation the operation type
      * @param e the transaction event
      */
    protected void doDML(int operation, TransactionEvent e){
         System.out.println("Enter in doDML....");
         Map sessionScope = ADFContext.getCurrent().getSessionScope();
         String user = (String)sessionScope.get("userId");

         if (operation == DML_INSERT) {
             try {
                 setRecipeDocNo(getSrNoString());
                 setCreationDate((Date)Date.getCurrentDate());
                 setCreatedBy(new oracle.jbo.domain.Number(user));
             } catch (SQLException f) {
                 System.out.println(f.getMessage());
             }
         } else if (DML_UPDATE == operation) {
             try {
                 setLastUpdateDate((Date)Date.getCurrentDate());
                 setLastUpdatedBy(new oracle.jbo.domain.Number(user));
             } catch (SQLException f) {
                 System.out.println(f.getMessage());
             }
         }
         super.doDML(operation, e);
    }
                      
    public String getSrNoString() {
         String srno = null;
         String stmt =
             "BEGIN :1 := mnj_mfg_doc_no_pkg.gwl_wash_recipe_doc; end;";
         java.sql.CallableStatement cs =
             getDBTransaction().createCallableStatement(stmt, 1);
         try {
             cs.registerOutParameter(1, oracle.jdbc.OracleTypes.VARCHAR);
             cs.execute();
             srno = cs.getString(1);
             cs.close();
         } catch (Exception e) {
             e.printStackTrace();
         }
         return srno;
    }
}
